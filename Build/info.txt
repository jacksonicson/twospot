= TwoSpot =

== Requirements
  * Python 2.5.2
  * Java 1.6
  * Hadoop 0.20.1
  * HBase 0.20.1

== Configuration ==
All configuration files are located within the /conf directory. The /conf directory contains one subdirectory for every platform component: 
  * /conf/fileserver: Configuration files for the fileserver
  * /conf/master: Configuration files for the master process
  * /conf/frontend: Configuration files for the frontend
  * /conf/controller: Configuration files for the controller _and appserver_
  * /conf/appserver: Configuration files for the appserver
  * /conf/util: Generic configuration files which are used by all components

The following list contains all important configuration files and properties:
  * /conf/util/etc
    * config.properties: All properties are documented in this file
    * zookeeper.xml: Address and port of the ZooKeeper quorum server
  * /conf/fileserver/etc/spring.xml
    * DownloadResourceHandler.resouceBase: Defines where the application packages are located
    * UploadResourceHandler.resouceBase: Defines where the application packages are located
  * /conf/controller/
    * hbase-site.xml: Contains the location and port of the ZooKeeper Quorum service (port ist in a comment!!!)
    * etc/controller.properties: All properties are important and documented in this file
  * /conf/appserver/
    * hbase-site.xml: Contains the location and port of the ZooKeeper Quorum service
    * etc/appServer.properties: All properties are important and documented in this file

Configuration of the Log4j system: 
Each configuration directory contains a /etc/log4j.xml file. This file is used to configure the logging for the application fragment. The Rolling-Appender is used for server deployments.
  * /conf/appserver/etc/log4j.xml: Remove the Socket-Appender if it's not used. 

== Start ==
Twospot provides a python script which is used to bootstrap a single component. The python script also contains functions to start all platform components.

To start a single componente use: python start.py NAME. 
Valid NAME's are: 
  * fileserver
  * frontend
  * master
  * controller
  
To start all componentes use: twospot.sh start (linux) or twospot.bat (windows)

To stop all running twospot components use: twospot.sh kill
The kill command locates all *.pid files. The filename describes the process identifier which will be killed.
  