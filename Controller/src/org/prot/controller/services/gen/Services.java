// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protoc/services.proto

package org.prot.controller.services.gen;

public final class Services {
  private Services() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class User extends
      com.google.protobuf.GeneratedMessage {
    // Use User.newBuilder() to construct.
    private User() {
      initFields();
    }
    private User(boolean noInit) {}
    
    private static final User defaultInstance;
    public static User getDefaultInstance() {
      return defaultInstance;
    }
    
    public User getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_User_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_User_fieldAccessorTable;
    }
    
    // required string uid = 1;
    public static final int UID_FIELD_NUMBER = 1;
    private boolean hasUid;
    private java.lang.String uid_ = "";
    public boolean hasUid() { return hasUid; }
    public java.lang.String getUid() { return uid_; }
    
    // optional string username = 2;
    public static final int USERNAME_FIELD_NUMBER = 2;
    private boolean hasUsername;
    private java.lang.String username_ = "";
    public boolean hasUsername() { return hasUsername; }
    public java.lang.String getUsername() { return username_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasUid) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasUid()) {
        output.writeString(1, getUid());
      }
      if (hasUsername()) {
        output.writeString(2, getUsername());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasUid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getUid());
      }
      if (hasUsername()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUsername());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.User parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.User parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.User parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.User prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.User result;
      
      // Construct using org.prot.controller.services.gen.Services.User.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.User();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.User internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.User();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.User.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.User getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.User.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.User build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.User buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.User buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.User returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.User) {
          return mergeFrom((org.prot.controller.services.gen.Services.User)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.User other) {
        if (other == org.prot.controller.services.gen.Services.User.getDefaultInstance()) return this;
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setUid(input.readString());
              break;
            }
            case 18: {
              setUsername(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string uid = 1;
      public boolean hasUid() {
        return result.hasUid();
      }
      public java.lang.String getUid() {
        return result.getUid();
      }
      public Builder setUid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder clearUid() {
        result.hasUid = false;
        result.uid_ = getDefaultInstance().getUid();
        return this;
      }
      
      // optional string username = 2;
      public boolean hasUsername() {
        return result.hasUsername();
      }
      public java.lang.String getUsername() {
        return result.getUsername();
      }
      public Builder setUsername(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder clearUsername() {
        result.hasUsername = false;
        result.username_ = getDefaultInstance().getUsername();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.User)
    }
    
    static {
      defaultInstance = new User(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.User)
  }
  
  public static final class RegisterUser extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterUser.newBuilder() to construct.
    private RegisterUser() {
      initFields();
    }
    private RegisterUser(boolean noInit) {}
    
    private static final RegisterUser defaultInstance;
    public static RegisterUser getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterUser getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_RegisterUser_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_RegisterUser_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string uid = 2;
    public static final int UID_FIELD_NUMBER = 2;
    private boolean hasUid;
    private java.lang.String uid_ = "";
    public boolean hasUid() { return hasUid; }
    public java.lang.String getUid() { return uid_; }
    
    // required string username = 3;
    public static final int USERNAME_FIELD_NUMBER = 3;
    private boolean hasUsername;
    private java.lang.String username_ = "";
    public boolean hasUsername() { return hasUsername; }
    public java.lang.String getUsername() { return username_; }
    
    // required string session = 4;
    public static final int SESSION_FIELD_NUMBER = 4;
    private boolean hasSession;
    private java.lang.String session_ = "";
    public boolean hasSession() { return hasSession; }
    public java.lang.String getSession() { return session_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasUid) return false;
      if (!hasUsername) return false;
      if (!hasSession) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasUid()) {
        output.writeString(2, getUid());
      }
      if (hasUsername()) {
        output.writeString(3, getUsername());
      }
      if (hasSession()) {
        output.writeString(4, getSession());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasUid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getUid());
      }
      if (hasUsername()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getUsername());
      }
      if (hasSession()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getSession());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterUser parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.RegisterUser prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.RegisterUser result;
      
      // Construct using org.prot.controller.services.gen.Services.RegisterUser.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.RegisterUser();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.RegisterUser internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.RegisterUser();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.RegisterUser.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.RegisterUser getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.RegisterUser.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.RegisterUser build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.RegisterUser buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.RegisterUser buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.RegisterUser returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.RegisterUser) {
          return mergeFrom((org.prot.controller.services.gen.Services.RegisterUser)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.RegisterUser other) {
        if (other == org.prot.controller.services.gen.Services.RegisterUser.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasUsername()) {
          setUsername(other.getUsername());
        }
        if (other.hasSession()) {
          setSession(other.getSession());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setUid(input.readString());
              break;
            }
            case 26: {
              setUsername(input.readString());
              break;
            }
            case 34: {
              setSession(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string uid = 2;
      public boolean hasUid() {
        return result.hasUid();
      }
      public java.lang.String getUid() {
        return result.getUid();
      }
      public Builder setUid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUid = true;
        result.uid_ = value;
        return this;
      }
      public Builder clearUid() {
        result.hasUid = false;
        result.uid_ = getDefaultInstance().getUid();
        return this;
      }
      
      // required string username = 3;
      public boolean hasUsername() {
        return result.hasUsername();
      }
      public java.lang.String getUsername() {
        return result.getUsername();
      }
      public Builder setUsername(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUsername = true;
        result.username_ = value;
        return this;
      }
      public Builder clearUsername() {
        result.hasUsername = false;
        result.username_ = getDefaultInstance().getUsername();
        return this;
      }
      
      // required string session = 4;
      public boolean hasSession() {
        return result.hasSession();
      }
      public java.lang.String getSession() {
        return result.getSession();
      }
      public Builder setSession(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasSession = true;
        result.session_ = value;
        return this;
      }
      public Builder clearSession() {
        result.hasSession = false;
        result.session_ = getDefaultInstance().getSession();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.RegisterUser)
    }
    
    static {
      defaultInstance = new RegisterUser(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.RegisterUser)
  }
  
  public static final class UrlRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use UrlRequest.newBuilder() to construct.
    private UrlRequest() {
      initFields();
    }
    private UrlRequest(boolean noInit) {}
    
    private static final UrlRequest defaultInstance;
    public static UrlRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public UrlRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_UrlRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_UrlRequest_fieldAccessorTable;
    }
    
    // required string okUrl = 1;
    public static final int OKURL_FIELD_NUMBER = 1;
    private boolean hasOkUrl;
    private java.lang.String okUrl_ = "";
    public boolean hasOkUrl() { return hasOkUrl; }
    public java.lang.String getOkUrl() { return okUrl_; }
    
    // required string failedUrl = 2;
    public static final int FAILEDURL_FIELD_NUMBER = 2;
    private boolean hasFailedUrl;
    private java.lang.String failedUrl_ = "";
    public boolean hasFailedUrl() { return hasFailedUrl; }
    public java.lang.String getFailedUrl() { return failedUrl_; }
    
    // optional string redirectUrl = 3;
    public static final int REDIRECTURL_FIELD_NUMBER = 3;
    private boolean hasRedirectUrl;
    private java.lang.String redirectUrl_ = "";
    public boolean hasRedirectUrl() { return hasRedirectUrl; }
    public java.lang.String getRedirectUrl() { return redirectUrl_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasOkUrl) return false;
      if (!hasFailedUrl) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOkUrl()) {
        output.writeString(1, getOkUrl());
      }
      if (hasFailedUrl()) {
        output.writeString(2, getFailedUrl());
      }
      if (hasRedirectUrl()) {
        output.writeString(3, getRedirectUrl());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOkUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getOkUrl());
      }
      if (hasFailedUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getFailedUrl());
      }
      if (hasRedirectUrl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getRedirectUrl());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.UrlRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.UrlRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.UrlRequest result;
      
      // Construct using org.prot.controller.services.gen.Services.UrlRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.UrlRequest();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.UrlRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.UrlRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.UrlRequest.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.UrlRequest getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.UrlRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.UrlRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.UrlRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.UrlRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.UrlRequest) {
          return mergeFrom((org.prot.controller.services.gen.Services.UrlRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.UrlRequest other) {
        if (other == org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance()) return this;
        if (other.hasOkUrl()) {
          setOkUrl(other.getOkUrl());
        }
        if (other.hasFailedUrl()) {
          setFailedUrl(other.getFailedUrl());
        }
        if (other.hasRedirectUrl()) {
          setRedirectUrl(other.getRedirectUrl());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setOkUrl(input.readString());
              break;
            }
            case 18: {
              setFailedUrl(input.readString());
              break;
            }
            case 26: {
              setRedirectUrl(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string okUrl = 1;
      public boolean hasOkUrl() {
        return result.hasOkUrl();
      }
      public java.lang.String getOkUrl() {
        return result.getOkUrl();
      }
      public Builder setOkUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOkUrl = true;
        result.okUrl_ = value;
        return this;
      }
      public Builder clearOkUrl() {
        result.hasOkUrl = false;
        result.okUrl_ = getDefaultInstance().getOkUrl();
        return this;
      }
      
      // required string failedUrl = 2;
      public boolean hasFailedUrl() {
        return result.hasFailedUrl();
      }
      public java.lang.String getFailedUrl() {
        return result.getFailedUrl();
      }
      public Builder setFailedUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFailedUrl = true;
        result.failedUrl_ = value;
        return this;
      }
      public Builder clearFailedUrl() {
        result.hasFailedUrl = false;
        result.failedUrl_ = getDefaultInstance().getFailedUrl();
        return this;
      }
      
      // optional string redirectUrl = 3;
      public boolean hasRedirectUrl() {
        return result.hasRedirectUrl();
      }
      public java.lang.String getRedirectUrl() {
        return result.getRedirectUrl();
      }
      public Builder setRedirectUrl(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRedirectUrl = true;
        result.redirectUrl_ = value;
        return this;
      }
      public Builder clearRedirectUrl() {
        result.hasRedirectUrl = false;
        result.redirectUrl_ = getDefaultInstance().getRedirectUrl();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.UrlRequest)
    }
    
    static {
      defaultInstance = new UrlRequest(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.UrlRequest)
  }
  
  public static final class Void extends
      com.google.protobuf.GeneratedMessage {
    // Use Void.newBuilder() to construct.
    private Void() {
      initFields();
    }
    private Void(boolean noInit) {}
    
    private static final Void defaultInstance;
    public static Void getDefaultInstance() {
      return defaultInstance;
    }
    
    public Void getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_Void_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_Void_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.Void parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Void parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.Void prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.Void result;
      
      // Construct using org.prot.controller.services.gen.Services.Void.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.Void();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.Void internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.Void();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.Void.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.Void getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.Void build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.Void buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.Void buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.Void returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.Void) {
          return mergeFrom((org.prot.controller.services.gen.Services.Void)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.Void other) {
        if (other == org.prot.controller.services.gen.Services.Void.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:services.Void)
    }
    
    static {
      defaultInstance = new Void(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.Void)
  }
  
  public static final class Boolean extends
      com.google.protobuf.GeneratedMessage {
    // Use Boolean.newBuilder() to construct.
    private Boolean() {
      initFields();
    }
    private Boolean(boolean noInit) {}
    
    private static final Boolean defaultInstance;
    public static Boolean getDefaultInstance() {
      return defaultInstance;
    }
    
    public Boolean getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_Boolean_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_Boolean_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.Boolean parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.Boolean parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.Boolean prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.Boolean result;
      
      // Construct using org.prot.controller.services.gen.Services.Boolean.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.Boolean();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.Boolean internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.Boolean();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.Boolean.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.Boolean getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.Boolean.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.Boolean build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.Boolean buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.Boolean buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.Boolean returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.Boolean) {
          return mergeFrom((org.prot.controller.services.gen.Services.Boolean)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.Boolean other) {
        if (other == org.prot.controller.services.gen.Services.Boolean.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:services.Boolean)
    }
    
    static {
      defaultInstance = new Boolean(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.Boolean)
  }
  
  public static final class String extends
      com.google.protobuf.GeneratedMessage {
    // Use String.newBuilder() to construct.
    private String() {
      initFields();
    }
    private String(boolean noInit) {}
    
    private static final String defaultInstance;
    public static String getDefaultInstance() {
      return defaultInstance;
    }
    
    public String getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_String_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_String_fieldAccessorTable;
    }
    
    // required string value = 1;
    public static final int VALUE_FIELD_NUMBER = 1;
    private boolean hasValue;
    private java.lang.String value_ = "";
    public boolean hasValue() { return hasValue; }
    public java.lang.String getValue() { return value_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasValue) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasValue()) {
        output.writeString(1, getValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.String parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.String parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.String parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.String prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.String result;
      
      // Construct using org.prot.controller.services.gen.Services.String.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.String();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.String internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.String();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.String.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.String getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.String.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.String build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.String buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.String buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.String returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.String) {
          return mergeFrom((org.prot.controller.services.gen.Services.String)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.String other) {
        if (other == org.prot.controller.services.gen.Services.String.getDefaultInstance()) return this;
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string value = 1;
      public boolean hasValue() {
        return result.hasValue();
      }
      public java.lang.String getValue() {
        return result.getValue();
      }
      public Builder setValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasValue = true;
        result.value_ = value;
        return this;
      }
      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.String)
    }
    
    static {
      defaultInstance = new String(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.String)
  }
  
  public static final class RegisterDeployment extends
      com.google.protobuf.GeneratedMessage {
    // Use RegisterDeployment.newBuilder() to construct.
    private RegisterDeployment() {
      initFields();
    }
    private RegisterDeployment(boolean noInit) {}
    
    private static final RegisterDeployment defaultInstance;
    public static RegisterDeployment getDefaultInstance() {
      return defaultInstance;
    }
    
    public RegisterDeployment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_RegisterDeployment_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_RegisterDeployment_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appId = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // required string version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private boolean hasVersion;
    private java.lang.String version_ = "";
    public boolean hasVersion() { return hasVersion; }
    public java.lang.String getVersion() { return version_; }
    
    // optional bool status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private boolean hasStatus;
    private boolean status_ = false;
    public boolean hasStatus() { return hasStatus; }
    public boolean getStatus() { return status_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppId) return false;
      if (!hasVersion) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppId()) {
        output.writeString(2, getAppId());
      }
      if (hasVersion()) {
        output.writeString(3, getVersion());
      }
      if (hasStatus()) {
        output.writeBool(4, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppId());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVersion());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.RegisterDeployment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.RegisterDeployment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.RegisterDeployment result;
      
      // Construct using org.prot.controller.services.gen.Services.RegisterDeployment.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.RegisterDeployment();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.RegisterDeployment internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.RegisterDeployment();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.RegisterDeployment.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.RegisterDeployment getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.RegisterDeployment.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.RegisterDeployment build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.RegisterDeployment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.RegisterDeployment buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.RegisterDeployment returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.RegisterDeployment) {
          return mergeFrom((org.prot.controller.services.gen.Services.RegisterDeployment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.RegisterDeployment other) {
        if (other == org.prot.controller.services.gen.Services.RegisterDeployment.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppId(input.readString());
              break;
            }
            case 26: {
              setVersion(input.readString());
              break;
            }
            case 32: {
              setStatus(input.readBool());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appId = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // required string version = 3;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public java.lang.String getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = getDefaultInstance().getVersion();
        return this;
      }
      
      // optional bool status = 4;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public boolean getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(boolean value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = false;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.RegisterDeployment)
    }
    
    static {
      defaultInstance = new RegisterDeployment(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.RegisterDeployment)
  }
  
  public static final class AnnounceDeployment extends
      com.google.protobuf.GeneratedMessage {
    // Use AnnounceDeployment.newBuilder() to construct.
    private AnnounceDeployment() {
      initFields();
    }
    private AnnounceDeployment(boolean noInit) {}
    
    private static final AnnounceDeployment defaultInstance;
    public static AnnounceDeployment getDefaultInstance() {
      return defaultInstance;
    }
    
    public AnnounceDeployment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_AnnounceDeployment_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_AnnounceDeployment_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appId = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // required string version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private boolean hasVersion;
    private java.lang.String version_ = "";
    public boolean hasVersion() { return hasVersion; }
    public java.lang.String getVersion() { return version_; }
    
    // optional .services.String uploadToken = 4;
    public static final int UPLOADTOKEN_FIELD_NUMBER = 4;
    private boolean hasUploadToken;
    private org.prot.controller.services.gen.Services.String uploadToken_;
    public boolean hasUploadToken() { return hasUploadToken; }
    public org.prot.controller.services.gen.Services.String getUploadToken() { return uploadToken_; }
    
    private void initFields() {
      uploadToken_ = org.prot.controller.services.gen.Services.String.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppId) return false;
      if (!hasVersion) return false;
      if (hasUploadToken()) {
        if (!getUploadToken().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppId()) {
        output.writeString(2, getAppId());
      }
      if (hasVersion()) {
        output.writeString(3, getVersion());
      }
      if (hasUploadToken()) {
        output.writeMessage(4, getUploadToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppId());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVersion());
      }
      if (hasUploadToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getUploadToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AnnounceDeployment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.AnnounceDeployment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.AnnounceDeployment result;
      
      // Construct using org.prot.controller.services.gen.Services.AnnounceDeployment.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.AnnounceDeployment();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.AnnounceDeployment internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.AnnounceDeployment();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.AnnounceDeployment.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.AnnounceDeployment getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.AnnounceDeployment.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.AnnounceDeployment build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.AnnounceDeployment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.AnnounceDeployment buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.AnnounceDeployment returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.AnnounceDeployment) {
          return mergeFrom((org.prot.controller.services.gen.Services.AnnounceDeployment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.AnnounceDeployment other) {
        if (other == org.prot.controller.services.gen.Services.AnnounceDeployment.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        if (other.hasUploadToken()) {
          mergeUploadToken(other.getUploadToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppId(input.readString());
              break;
            }
            case 26: {
              setVersion(input.readString());
              break;
            }
            case 34: {
              org.prot.controller.services.gen.Services.String.Builder subBuilder = org.prot.controller.services.gen.Services.String.newBuilder();
              if (hasUploadToken()) {
                subBuilder.mergeFrom(getUploadToken());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setUploadToken(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appId = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // required string version = 3;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public java.lang.String getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = getDefaultInstance().getVersion();
        return this;
      }
      
      // optional .services.String uploadToken = 4;
      public boolean hasUploadToken() {
        return result.hasUploadToken();
      }
      public org.prot.controller.services.gen.Services.String getUploadToken() {
        return result.getUploadToken();
      }
      public Builder setUploadToken(org.prot.controller.services.gen.Services.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasUploadToken = true;
        result.uploadToken_ = value;
        return this;
      }
      public Builder setUploadToken(org.prot.controller.services.gen.Services.String.Builder builderForValue) {
        result.hasUploadToken = true;
        result.uploadToken_ = builderForValue.build();
        return this;
      }
      public Builder mergeUploadToken(org.prot.controller.services.gen.Services.String value) {
        if (result.hasUploadToken() &&
            result.uploadToken_ != org.prot.controller.services.gen.Services.String.getDefaultInstance()) {
          result.uploadToken_ =
            org.prot.controller.services.gen.Services.String.newBuilder(result.uploadToken_).mergeFrom(value).buildPartial();
        } else {
          result.uploadToken_ = value;
        }
        result.hasUploadToken = true;
        return this;
      }
      public Builder clearUploadToken() {
        result.hasUploadToken = false;
        result.uploadToken_ = org.prot.controller.services.gen.Services.String.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.AnnounceDeployment)
    }
    
    static {
      defaultInstance = new AnnounceDeployment(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.AnnounceDeployment)
  }
  
  public static final class AppDeployed extends
      com.google.protobuf.GeneratedMessage {
    // Use AppDeployed.newBuilder() to construct.
    private AppDeployed() {
      initFields();
    }
    private AppDeployed(boolean noInit) {}
    
    private static final AppDeployed defaultInstance;
    public static AppDeployed getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppDeployed getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_AppDeployed_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_AppDeployed_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appId = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // required string version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private boolean hasVersion;
    private java.lang.String version_ = "";
    public boolean hasVersion() { return hasVersion; }
    public java.lang.String getVersion() { return version_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppId) return false;
      if (!hasVersion) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppId()) {
        output.writeString(2, getAppId());
      }
      if (hasVersion()) {
        output.writeString(3, getVersion());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppId());
      }
      if (hasVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getVersion());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.AppDeployed parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.AppDeployed prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.AppDeployed result;
      
      // Construct using org.prot.controller.services.gen.Services.AppDeployed.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.AppDeployed();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.AppDeployed internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.AppDeployed();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.AppDeployed.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.AppDeployed getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.AppDeployed.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.AppDeployed build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.AppDeployed buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.AppDeployed buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.AppDeployed returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.AppDeployed) {
          return mergeFrom((org.prot.controller.services.gen.Services.AppDeployed)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.AppDeployed other) {
        if (other == org.prot.controller.services.gen.Services.AppDeployed.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasVersion()) {
          setVersion(other.getVersion());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppId(input.readString());
              break;
            }
            case 26: {
              setVersion(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appId = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // required string version = 3;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public java.lang.String getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = getDefaultInstance().getVersion();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.AppDeployed)
    }
    
    static {
      defaultInstance = new AppDeployed(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.AppDeployed)
  }
  
  public static final class LogMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use LogMessage.newBuilder() to construct.
    private LogMessage() {
      initFields();
    }
    private LogMessage(boolean noInit) {}
    
    private static final LogMessage defaultInstance;
    public static LogMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_LogMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_LogMessage_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appid = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppid;
    private java.lang.String appid_ = "";
    public boolean hasAppid() { return hasAppid; }
    public java.lang.String getAppid() { return appid_; }
    
    // required string message = 3;
    public static final int MESSAGE_FIELD_NUMBER = 3;
    private boolean hasMessage;
    private java.lang.String message_ = "";
    public boolean hasMessage() { return hasMessage; }
    public java.lang.String getMessage() { return message_; }
    
    // required int32 severity = 4;
    public static final int SEVERITY_FIELD_NUMBER = 4;
    private boolean hasSeverity;
    private int severity_ = 0;
    public boolean hasSeverity() { return hasSeverity; }
    public int getSeverity() { return severity_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppid) return false;
      if (!hasMessage) return false;
      if (!hasSeverity) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppid()) {
        output.writeString(2, getAppid());
      }
      if (hasMessage()) {
        output.writeString(3, getMessage());
      }
      if (hasSeverity()) {
        output.writeInt32(4, getSeverity());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppid());
      }
      if (hasMessage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getMessage());
      }
      if (hasSeverity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getSeverity());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.LogMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.LogMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.LogMessage result;
      
      // Construct using org.prot.controller.services.gen.Services.LogMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.LogMessage();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.LogMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.LogMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.LogMessage.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.LogMessage getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.LogMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.LogMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.LogMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.LogMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.LogMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.LogMessage) {
          return mergeFrom((org.prot.controller.services.gen.Services.LogMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.LogMessage other) {
        if (other == org.prot.controller.services.gen.Services.LogMessage.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppid()) {
          setAppid(other.getAppid());
        }
        if (other.hasMessage()) {
          setMessage(other.getMessage());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppid(input.readString());
              break;
            }
            case 26: {
              setMessage(input.readString());
              break;
            }
            case 32: {
              setSeverity(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appid = 2;
      public boolean hasAppid() {
        return result.hasAppid();
      }
      public java.lang.String getAppid() {
        return result.getAppid();
      }
      public Builder setAppid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppid = true;
        result.appid_ = value;
        return this;
      }
      public Builder clearAppid() {
        result.hasAppid = false;
        result.appid_ = getDefaultInstance().getAppid();
        return this;
      }
      
      // required string message = 3;
      public boolean hasMessage() {
        return result.hasMessage();
      }
      public java.lang.String getMessage() {
        return result.getMessage();
      }
      public Builder setMessage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder clearMessage() {
        result.hasMessage = false;
        result.message_ = getDefaultInstance().getMessage();
        return this;
      }
      
      // required int32 severity = 4;
      public boolean hasSeverity() {
        return result.hasSeverity();
      }
      public int getSeverity() {
        return result.getSeverity();
      }
      public Builder setSeverity(int value) {
        result.hasSeverity = true;
        result.severity_ = value;
        return this;
      }
      public Builder clearSeverity() {
        result.hasSeverity = false;
        result.severity_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.LogMessage)
    }
    
    static {
      defaultInstance = new LogMessage(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.LogMessage)
  }
  
  public static final class ListMessages extends
      com.google.protobuf.GeneratedMessage {
    // Use ListMessages.newBuilder() to construct.
    private ListMessages() {
      initFields();
    }
    private ListMessages(boolean noInit) {}
    
    private static final ListMessages defaultInstance;
    public static ListMessages getDefaultInstance() {
      return defaultInstance;
    }
    
    public ListMessages getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_ListMessages_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_ListMessages_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appId = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // required int32 severity = 3;
    public static final int SEVERITY_FIELD_NUMBER = 3;
    private boolean hasSeverity;
    private int severity_ = 0;
    public boolean hasSeverity() { return hasSeverity; }
    public int getSeverity() { return severity_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppId) return false;
      if (!hasSeverity) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppId()) {
        output.writeString(2, getAppId());
      }
      if (hasSeverity()) {
        output.writeInt32(3, getSeverity());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppId());
      }
      if (hasSeverity()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getSeverity());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.ListMessages parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.ListMessages prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.ListMessages result;
      
      // Construct using org.prot.controller.services.gen.Services.ListMessages.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.ListMessages();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.ListMessages internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.ListMessages();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.ListMessages.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.ListMessages getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.ListMessages.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.ListMessages build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.ListMessages buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.ListMessages buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.ListMessages returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.ListMessages) {
          return mergeFrom((org.prot.controller.services.gen.Services.ListMessages)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.ListMessages other) {
        if (other == org.prot.controller.services.gen.Services.ListMessages.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppId(input.readString());
              break;
            }
            case 24: {
              setSeverity(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appId = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // required int32 severity = 3;
      public boolean hasSeverity() {
        return result.hasSeverity();
      }
      public int getSeverity() {
        return result.getSeverity();
      }
      public Builder setSeverity(int value) {
        result.hasSeverity = true;
        result.severity_ = value;
        return this;
      }
      public Builder clearSeverity() {
        result.hasSeverity = false;
        result.severity_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.ListMessages)
    }
    
    static {
      defaultInstance = new ListMessages(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.ListMessages)
  }
  
  public static final class MessageList extends
      com.google.protobuf.GeneratedMessage {
    // Use MessageList.newBuilder() to construct.
    private MessageList() {
      initFields();
    }
    private MessageList(boolean noInit) {}
    
    private static final MessageList defaultInstance;
    public static MessageList getDefaultInstance() {
      return defaultInstance;
    }
    
    public MessageList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_MessageList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_MessageList_fieldAccessorTable;
    }
    
    // repeated .services.LogMessage messages = 1;
    public static final int MESSAGES_FIELD_NUMBER = 1;
    private java.util.List<org.prot.controller.services.gen.Services.LogMessage> messages_ =
      java.util.Collections.emptyList();
    public java.util.List<org.prot.controller.services.gen.Services.LogMessage> getMessagesList() {
      return messages_;
    }
    public int getMessagesCount() { return messages_.size(); }
    public org.prot.controller.services.gen.Services.LogMessage getMessages(int index) {
      return messages_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (org.prot.controller.services.gen.Services.LogMessage element : getMessagesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (org.prot.controller.services.gen.Services.LogMessage element : getMessagesList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (org.prot.controller.services.gen.Services.LogMessage element : getMessagesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.MessageList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.MessageList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.MessageList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.MessageList result;
      
      // Construct using org.prot.controller.services.gen.Services.MessageList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.MessageList();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.MessageList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.MessageList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.MessageList.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.MessageList getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.MessageList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.MessageList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.MessageList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.MessageList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.messages_ != java.util.Collections.EMPTY_LIST) {
          result.messages_ =
            java.util.Collections.unmodifiableList(result.messages_);
        }
        org.prot.controller.services.gen.Services.MessageList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.MessageList) {
          return mergeFrom((org.prot.controller.services.gen.Services.MessageList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.MessageList other) {
        if (other == org.prot.controller.services.gen.Services.MessageList.getDefaultInstance()) return this;
        if (!other.messages_.isEmpty()) {
          if (result.messages_.isEmpty()) {
            result.messages_ = new java.util.ArrayList<org.prot.controller.services.gen.Services.LogMessage>();
          }
          result.messages_.addAll(other.messages_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              org.prot.controller.services.gen.Services.LogMessage.Builder subBuilder = org.prot.controller.services.gen.Services.LogMessage.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMessages(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .services.LogMessage messages = 1;
      public java.util.List<org.prot.controller.services.gen.Services.LogMessage> getMessagesList() {
        return java.util.Collections.unmodifiableList(result.messages_);
      }
      public int getMessagesCount() {
        return result.getMessagesCount();
      }
      public org.prot.controller.services.gen.Services.LogMessage getMessages(int index) {
        return result.getMessages(index);
      }
      public Builder setMessages(int index, org.prot.controller.services.gen.Services.LogMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.messages_.set(index, value);
        return this;
      }
      public Builder setMessages(int index, org.prot.controller.services.gen.Services.LogMessage.Builder builderForValue) {
        result.messages_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMessages(org.prot.controller.services.gen.Services.LogMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.messages_.isEmpty()) {
          result.messages_ = new java.util.ArrayList<org.prot.controller.services.gen.Services.LogMessage>();
        }
        result.messages_.add(value);
        return this;
      }
      public Builder addMessages(org.prot.controller.services.gen.Services.LogMessage.Builder builderForValue) {
        if (result.messages_.isEmpty()) {
          result.messages_ = new java.util.ArrayList<org.prot.controller.services.gen.Services.LogMessage>();
        }
        result.messages_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMessages(
          java.lang.Iterable<? extends org.prot.controller.services.gen.Services.LogMessage> values) {
        if (result.messages_.isEmpty()) {
          result.messages_ = new java.util.ArrayList<org.prot.controller.services.gen.Services.LogMessage>();
        }
        super.addAll(values, result.messages_);
        return this;
      }
      public Builder clearMessages() {
        result.messages_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.MessageList)
    }
    
    static {
      defaultInstance = new MessageList(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.MessageList)
  }
  
  public static final class TableList extends
      com.google.protobuf.GeneratedMessage {
    // Use TableList.newBuilder() to construct.
    private TableList() {
      initFields();
    }
    private TableList(boolean noInit) {}
    
    private static final TableList defaultInstance;
    public static TableList getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_TableList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_TableList_fieldAccessorTable;
    }
    
    // repeated string tableNames = 1;
    public static final int TABLENAMES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> tableNames_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getTableNamesList() {
      return tableNames_;
    }
    public int getTableNamesCount() { return tableNames_.size(); }
    public java.lang.String getTableNames(int index) {
      return tableNames_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getTableNamesList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getTableNamesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTableNamesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.TableList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.TableList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.TableList result;
      
      // Construct using org.prot.controller.services.gen.Services.TableList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.TableList();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.TableList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.TableList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.TableList.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.TableList getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.TableList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.TableList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.TableList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.TableList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tableNames_ != java.util.Collections.EMPTY_LIST) {
          result.tableNames_ =
            java.util.Collections.unmodifiableList(result.tableNames_);
        }
        org.prot.controller.services.gen.Services.TableList returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.TableList) {
          return mergeFrom((org.prot.controller.services.gen.Services.TableList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.TableList other) {
        if (other == org.prot.controller.services.gen.Services.TableList.getDefaultInstance()) return this;
        if (!other.tableNames_.isEmpty()) {
          if (result.tableNames_.isEmpty()) {
            result.tableNames_ = new java.util.ArrayList<java.lang.String>();
          }
          result.tableNames_.addAll(other.tableNames_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addTableNames(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string tableNames = 1;
      public java.util.List<java.lang.String> getTableNamesList() {
        return java.util.Collections.unmodifiableList(result.tableNames_);
      }
      public int getTableNamesCount() {
        return result.getTableNamesCount();
      }
      public java.lang.String getTableNames(int index) {
        return result.getTableNames(index);
      }
      public Builder setTableNames(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tableNames_.set(index, value);
        return this;
      }
      public Builder addTableNames(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tableNames_.isEmpty()) {
          result.tableNames_ = new java.util.ArrayList<java.lang.String>();
        }
        result.tableNames_.add(value);
        return this;
      }
      public Builder addAllTableNames(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.tableNames_.isEmpty()) {
          result.tableNames_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.tableNames_);
        return this;
      }
      public Builder clearTableNames() {
        result.tableNames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.TableList)
    }
    
    static {
      defaultInstance = new TableList(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.TableList)
  }
  
  public static final class TableData extends
      com.google.protobuf.GeneratedMessage {
    // Use TableData.newBuilder() to construct.
    private TableData() {
      initFields();
    }
    private TableData(boolean noInit) {}
    
    private static final TableData defaultInstance;
    public static TableData getDefaultInstance() {
      return defaultInstance;
    }
    
    public TableData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_TableData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_TableData_fieldAccessorTable;
    }
    
    // repeated bytes tableData = 1;
    public static final int TABLEDATA_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> tableData_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getTableDataList() {
      return tableData_;
    }
    public int getTableDataCount() { return tableData_.size(); }
    public com.google.protobuf.ByteString getTableData(int index) {
      return tableData_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.google.protobuf.ByteString element : getTableDataList()) {
        output.writeBytes(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getTableDataList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getTableDataList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.TableData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.TableData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.TableData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.TableData result;
      
      // Construct using org.prot.controller.services.gen.Services.TableData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.TableData();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.TableData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.TableData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.TableData.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.TableData getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.TableData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.TableData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.TableData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.TableData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.tableData_ != java.util.Collections.EMPTY_LIST) {
          result.tableData_ =
            java.util.Collections.unmodifiableList(result.tableData_);
        }
        org.prot.controller.services.gen.Services.TableData returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.TableData) {
          return mergeFrom((org.prot.controller.services.gen.Services.TableData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.TableData other) {
        if (other == org.prot.controller.services.gen.Services.TableData.getDefaultInstance()) return this;
        if (!other.tableData_.isEmpty()) {
          if (result.tableData_.isEmpty()) {
            result.tableData_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.tableData_.addAll(other.tableData_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addTableData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // repeated bytes tableData = 1;
      public java.util.List<com.google.protobuf.ByteString> getTableDataList() {
        return java.util.Collections.unmodifiableList(result.tableData_);
      }
      public int getTableDataCount() {
        return result.getTableDataCount();
      }
      public com.google.protobuf.ByteString getTableData(int index) {
        return result.getTableData(index);
      }
      public Builder setTableData(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.tableData_.set(index, value);
        return this;
      }
      public Builder addTableData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.tableData_.isEmpty()) {
          result.tableData_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.tableData_.add(value);
        return this;
      }
      public Builder addAllTableData(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.tableData_.isEmpty()) {
          result.tableData_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.tableData_);
        return this;
      }
      public Builder clearTableData() {
        result.tableData_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.TableData)
    }
    
    static {
      defaultInstance = new TableData(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.TableData)
  }
  
  public static final class FetchTable extends
      com.google.protobuf.GeneratedMessage {
    // Use FetchTable.newBuilder() to construct.
    private FetchTable() {
      initFields();
    }
    private FetchTable(boolean noInit) {}
    
    private static final FetchTable defaultInstance;
    public static FetchTable getDefaultInstance() {
      return defaultInstance;
    }
    
    public FetchTable getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.internal_static_services_FetchTable_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.prot.controller.services.gen.Services.internal_static_services_FetchTable_fieldAccessorTable;
    }
    
    // required string token = 1;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    // required string appId = 2;
    public static final int APPID_FIELD_NUMBER = 2;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // required string kind = 3;
    public static final int KIND_FIELD_NUMBER = 3;
    private boolean hasKind;
    private java.lang.String kind_ = "";
    public boolean hasKind() { return hasKind; }
    public java.lang.String getKind() { return kind_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasToken) return false;
      if (!hasAppId) return false;
      if (!hasKind) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasToken()) {
        output.writeString(1, getToken());
      }
      if (hasAppId()) {
        output.writeString(2, getAppId());
      }
      if (hasKind()) {
        output.writeString(3, getKind());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getToken());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getAppId());
      }
      if (hasKind()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getKind());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static org.prot.controller.services.gen.Services.FetchTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.prot.controller.services.gen.Services.FetchTable prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private org.prot.controller.services.gen.Services.FetchTable result;
      
      // Construct using org.prot.controller.services.gen.Services.FetchTable.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new org.prot.controller.services.gen.Services.FetchTable();
        return builder;
      }
      
      protected org.prot.controller.services.gen.Services.FetchTable internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new org.prot.controller.services.gen.Services.FetchTable();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.prot.controller.services.gen.Services.FetchTable.getDescriptor();
      }
      
      public org.prot.controller.services.gen.Services.FetchTable getDefaultInstanceForType() {
        return org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public org.prot.controller.services.gen.Services.FetchTable build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private org.prot.controller.services.gen.Services.FetchTable buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public org.prot.controller.services.gen.Services.FetchTable buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        org.prot.controller.services.gen.Services.FetchTable returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.prot.controller.services.gen.Services.FetchTable) {
          return mergeFrom((org.prot.controller.services.gen.Services.FetchTable)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(org.prot.controller.services.gen.Services.FetchTable other) {
        if (other == org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance()) return this;
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setToken(input.readString());
              break;
            }
            case 18: {
              setAppId(input.readString());
              break;
            }
            case 26: {
              setKind(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string token = 1;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // required string appId = 2;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // required string kind = 3;
      public boolean hasKind() {
        return result.hasKind();
      }
      public java.lang.String getKind() {
        return result.getKind();
      }
      public Builder setKind(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder clearKind() {
        result.hasKind = false;
        result.kind_ = getDefaultInstance().getKind();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:services.FetchTable)
    }
    
    static {
      defaultInstance = new FetchTable(true);
      org.prot.controller.services.gen.Services.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:services.FetchTable)
  }
  
  public static abstract class LogService
      implements com.google.protobuf.Service {
    protected LogService() {}
    
    public interface Interface {
      public abstract void log(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.LogMessage request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
      
      public abstract void listMessages(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.ListMessages request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.MessageList> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new LogService() {
        @Override
        public  void log(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.LogMessage request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
          impl.log(controller, request, done);
        }
        
        @Override
        public  void listMessages(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.ListMessages request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.MessageList> done) {
          impl.listMessages(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.log(controller, (org.prot.controller.services.gen.Services.LogMessage)request);
            case 1:
              return impl.listMessages(controller, (org.prot.controller.services.gen.Services.ListMessages)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.LogMessage.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.ListMessages.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.MessageList.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void log(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.LogMessage request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
    
    public abstract void listMessages(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.ListMessages request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.MessageList> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.log(controller, (org.prot.controller.services.gen.Services.LogMessage)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.Void>specializeCallback(
              done));
          return;
        case 1:
          this.listMessages(controller, (org.prot.controller.services.gen.Services.ListMessages)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.MessageList>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.LogMessage.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.ListMessages.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.MessageList.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.prot.controller.services.gen.Services.LogService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void log(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.LogMessage request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.Void.class,
            org.prot.controller.services.gen.Services.Void.getDefaultInstance()));
      }
      
      public  void listMessages(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.ListMessages request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.MessageList> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.MessageList.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.MessageList.class,
            org.prot.controller.services.gen.Services.MessageList.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.prot.controller.services.gen.Services.Void log(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.LogMessage request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.MessageList listMessages(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.ListMessages request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.prot.controller.services.gen.Services.Void log(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.LogMessage request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.Void) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.MessageList listMessages(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.ListMessages request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.MessageList) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.MessageList.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class DbService
      implements com.google.protobuf.Service {
    protected DbService() {}
    
    public interface Interface {
      public abstract void getTables(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableList> done);
      
      public abstract void getTableData(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableData> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new DbService() {
        @Override
        public  void getTables(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.FetchTable request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableList> done) {
          impl.getTables(controller, request, done);
        }
        
        @Override
        public  void getTableData(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.FetchTable request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableData> done) {
          impl.getTableData(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.getTables(controller, (org.prot.controller.services.gen.Services.FetchTable)request);
            case 1:
              return impl.getTableData(controller, (org.prot.controller.services.gen.Services.FetchTable)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.TableList.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.TableData.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void getTables(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.FetchTable request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableList> done);
    
    public abstract void getTableData(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.FetchTable request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableData> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.getDescriptor().getServices().get(1);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getTables(controller, (org.prot.controller.services.gen.Services.FetchTable)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.TableList>specializeCallback(
              done));
          return;
        case 1:
          this.getTableData(controller, (org.prot.controller.services.gen.Services.FetchTable)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.TableData>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.FetchTable.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.TableList.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.TableData.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.prot.controller.services.gen.Services.DbService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void getTables(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableList> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.TableList.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.TableList.class,
            org.prot.controller.services.gen.Services.TableList.getDefaultInstance()));
      }
      
      public  void getTableData(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.TableData> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.TableData.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.TableData.class,
            org.prot.controller.services.gen.Services.TableData.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.prot.controller.services.gen.Services.TableList getTables(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.TableData getTableData(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.prot.controller.services.gen.Services.TableList getTables(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.TableList) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.TableList.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.TableData getTableData(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.FetchTable request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.TableData) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.TableData.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class DeployService
      implements com.google.protobuf.Service {
    protected DeployService() {}
    
    public interface Interface {
      public abstract void register(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterDeployment request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Boolean> done);
      
      public abstract void announceDeploy(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AnnounceDeployment request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.String> done);
      
      public abstract void appDeployed(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AppDeployed request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new DeployService() {
        @Override
        public  void register(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.RegisterDeployment request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Boolean> done) {
          impl.register(controller, request, done);
        }
        
        @Override
        public  void announceDeploy(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.AnnounceDeployment request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.String> done) {
          impl.announceDeploy(controller, request, done);
        }
        
        @Override
        public  void appDeployed(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.AppDeployed request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
          impl.appDeployed(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.register(controller, (org.prot.controller.services.gen.Services.RegisterDeployment)request);
            case 1:
              return impl.announceDeploy(controller, (org.prot.controller.services.gen.Services.AnnounceDeployment)request);
            case 2:
              return impl.appDeployed(controller, (org.prot.controller.services.gen.Services.AppDeployed)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.RegisterDeployment.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.AnnounceDeployment.getDefaultInstance();
            case 2:
              return org.prot.controller.services.gen.Services.AppDeployed.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.Boolean.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.String.getDefaultInstance();
            case 2:
              return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void register(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.RegisterDeployment request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Boolean> done);
    
    public abstract void announceDeploy(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.AnnounceDeployment request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.String> done);
    
    public abstract void appDeployed(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.AppDeployed request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.getDescriptor().getServices().get(2);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.register(controller, (org.prot.controller.services.gen.Services.RegisterDeployment)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.Boolean>specializeCallback(
              done));
          return;
        case 1:
          this.announceDeploy(controller, (org.prot.controller.services.gen.Services.AnnounceDeployment)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.String>specializeCallback(
              done));
          return;
        case 2:
          this.appDeployed(controller, (org.prot.controller.services.gen.Services.AppDeployed)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.Void>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.RegisterDeployment.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.AnnounceDeployment.getDefaultInstance();
        case 2:
          return org.prot.controller.services.gen.Services.AppDeployed.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.Boolean.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.String.getDefaultInstance();
        case 2:
          return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.prot.controller.services.gen.Services.DeployService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void register(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterDeployment request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Boolean> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.Boolean.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.Boolean.class,
            org.prot.controller.services.gen.Services.Boolean.getDefaultInstance()));
      }
      
      public  void announceDeploy(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AnnounceDeployment request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.String> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.String.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.String.class,
            org.prot.controller.services.gen.Services.String.getDefaultInstance()));
      }
      
      public  void appDeployed(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AppDeployed request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.Void.class,
            org.prot.controller.services.gen.Services.Void.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.prot.controller.services.gen.Services.Boolean register(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterDeployment request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.String announceDeploy(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AnnounceDeployment request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.Void appDeployed(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AppDeployed request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.prot.controller.services.gen.Services.Boolean register(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterDeployment request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.Boolean) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.Boolean.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.String announceDeploy(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AnnounceDeployment request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.String) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.String.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.Void appDeployed(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.AppDeployed request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.Void) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance());
      }
      
    }
  }
  
  public static abstract class UserService
      implements com.google.protobuf.Service {
    protected UserService() {}
    
    public interface Interface {
      public abstract void getCurrentUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.User> done);
      
      public abstract void getLoginUrl(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.UrlRequest request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.UrlRequest> done);
      
      public abstract void unregisterUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
      
      public abstract void registerUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterUser request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
      
    }
    
    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new UserService() {
        @Override
        public  void getCurrentUser(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.User request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.User> done) {
          impl.getCurrentUser(controller, request, done);
        }
        
        @Override
        public  void getLoginUrl(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.UrlRequest request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.UrlRequest> done) {
          impl.getLoginUrl(controller, request, done);
        }
        
        @Override
        public  void unregisterUser(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.User request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
          impl.unregisterUser(controller, request, done);
        }
        
        @Override
        public  void registerUser(
            com.google.protobuf.RpcController controller,
            org.prot.controller.services.gen.Services.RegisterUser request,
            com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
          impl.registerUser(controller, request, done);
        }
        
      };
    }
    
    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        
        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.getCurrentUser(controller, (org.prot.controller.services.gen.Services.User)request);
            case 1:
              return impl.getLoginUrl(controller, (org.prot.controller.services.gen.Services.UrlRequest)request);
            case 2:
              return impl.unregisterUser(controller, (org.prot.controller.services.gen.Services.User)request);
            case 3:
              return impl.registerUser(controller, (org.prot.controller.services.gen.Services.RegisterUser)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.User.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance();
            case 2:
              return org.prot.controller.services.gen.Services.User.getDefaultInstance();
            case 3:
              return org.prot.controller.services.gen.Services.RegisterUser.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.prot.controller.services.gen.Services.User.getDefaultInstance();
            case 1:
              return org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance();
            case 2:
              return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
            case 3:
              return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }
        
      };
    }
    
    public abstract void getCurrentUser(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.User request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.User> done);
    
    public abstract void getLoginUrl(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.UrlRequest request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.UrlRequest> done);
    
    public abstract void unregisterUser(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.User request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
    
    public abstract void registerUser(
        com.google.protobuf.RpcController controller,
        org.prot.controller.services.gen.Services.RegisterUser request,
        com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done);
    
    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.prot.controller.services.gen.Services.getDescriptor().getServices().get(3);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    
    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.getCurrentUser(controller, (org.prot.controller.services.gen.Services.User)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.User>specializeCallback(
              done));
          return;
        case 1:
          this.getLoginUrl(controller, (org.prot.controller.services.gen.Services.UrlRequest)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.UrlRequest>specializeCallback(
              done));
          return;
        case 2:
          this.unregisterUser(controller, (org.prot.controller.services.gen.Services.User)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.Void>specializeCallback(
              done));
          return;
        case 3:
          this.registerUser(controller, (org.prot.controller.services.gen.Services.RegisterUser)request,
            com.google.protobuf.RpcUtil.<org.prot.controller.services.gen.Services.Void>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.User.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance();
        case 2:
          return org.prot.controller.services.gen.Services.User.getDefaultInstance();
        case 3:
          return org.prot.controller.services.gen.Services.RegisterUser.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.prot.controller.services.gen.Services.User.getDefaultInstance();
        case 1:
          return org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance();
        case 2:
          return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
        case 3:
          return org.prot.controller.services.gen.Services.Void.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }
    
    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }
    
    public static final class Stub extends org.prot.controller.services.gen.Services.UserService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.RpcChannel channel;
      
      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }
      
      public  void getCurrentUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.User> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.User.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.User.class,
            org.prot.controller.services.gen.Services.User.getDefaultInstance()));
      }
      
      public  void getLoginUrl(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.UrlRequest request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.UrlRequest> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.UrlRequest.class,
            org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance()));
      }
      
      public  void unregisterUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.Void.class,
            org.prot.controller.services.gen.Services.Void.getDefaultInstance()));
      }
      
      public  void registerUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterUser request,
          com.google.protobuf.RpcCallback<org.prot.controller.services.gen.Services.Void> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.prot.controller.services.gen.Services.Void.class,
            org.prot.controller.services.gen.Services.Void.getDefaultInstance()));
      }
    }
    
    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }
    
    public interface BlockingInterface {
      public org.prot.controller.services.gen.Services.User getCurrentUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.UrlRequest getLoginUrl(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.UrlRequest request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.Void unregisterUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request)
          throws com.google.protobuf.ServiceException;
      
      public org.prot.controller.services.gen.Services.Void registerUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterUser request)
          throws com.google.protobuf.ServiceException;
    }
    
    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }
      
      private final com.google.protobuf.BlockingRpcChannel channel;
      
      public org.prot.controller.services.gen.Services.User getCurrentUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.User) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.prot.controller.services.gen.Services.User.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.UrlRequest getLoginUrl(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.UrlRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.UrlRequest) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.prot.controller.services.gen.Services.UrlRequest.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.Void unregisterUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.User request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.Void) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance());
      }
      
      
      public org.prot.controller.services.gen.Services.Void registerUser(
          com.google.protobuf.RpcController controller,
          org.prot.controller.services.gen.Services.RegisterUser request)
          throws com.google.protobuf.ServiceException {
        return (org.prot.controller.services.gen.Services.Void) channel.callBlockingMethod(
          getDescriptor().getMethods().get(3),
          controller,
          request,
          org.prot.controller.services.gen.Services.Void.getDefaultInstance());
      }
      
    }
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_User_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_User_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_RegisterUser_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_RegisterUser_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_UrlRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_UrlRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_Void_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_Void_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_Boolean_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_Boolean_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_String_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_String_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_RegisterDeployment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_RegisterDeployment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_AnnounceDeployment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_AnnounceDeployment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_AppDeployed_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_AppDeployed_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_LogMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_LogMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_ListMessages_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_ListMessages_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_MessageList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_MessageList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_TableList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_TableList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_TableData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_TableData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_services_FetchTable_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_services_FetchTable_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\025protoc/services.proto\022\010services\"%\n\004Use" +
      "r\022\013\n\003uid\030\001 \002(\t\022\020\n\010username\030\002 \001(\t\"M\n\014Regi" +
      "sterUser\022\r\n\005token\030\001 \002(\t\022\013\n\003uid\030\002 \002(\t\022\020\n\010" +
      "username\030\003 \002(\t\022\017\n\007session\030\004 \002(\t\"C\n\nUrlRe" +
      "quest\022\r\n\005okUrl\030\001 \002(\t\022\021\n\tfailedUrl\030\002 \002(\t\022" +
      "\023\n\013redirectUrl\030\003 \001(\t\"\006\n\004Void\"\t\n\007Boolean\"" +
      "\027\n\006String\022\r\n\005value\030\001 \002(\t\"S\n\022RegisterDepl" +
      "oyment\022\r\n\005token\030\001 \002(\t\022\r\n\005appId\030\002 \002(\t\022\017\n\007" +
      "version\030\003 \002(\t\022\016\n\006status\030\004 \001(\010\"j\n\022Announc" +
      "eDeployment\022\r\n\005token\030\001 \002(\t\022\r\n\005appId\030\002 \002(",
      "\t\022\017\n\007version\030\003 \002(\t\022%\n\013uploadToken\030\004 \001(\0132" +
      "\020.services.String\"<\n\013AppDeployed\022\r\n\005toke" +
      "n\030\001 \002(\t\022\r\n\005appId\030\002 \002(\t\022\017\n\007version\030\003 \002(\t\"" +
      "M\n\nLogMessage\022\r\n\005token\030\001 \002(\t\022\r\n\005appid\030\002 " +
      "\002(\t\022\017\n\007message\030\003 \002(\t\022\020\n\010severity\030\004 \002(\005\">" +
      "\n\014ListMessages\022\r\n\005token\030\001 \002(\t\022\r\n\005appId\030\002" +
      " \002(\t\022\020\n\010severity\030\003 \002(\005\"5\n\013MessageList\022&\n" +
      "\010messages\030\001 \003(\0132\024.services.LogMessage\"\037\n" +
      "\tTableList\022\022\n\ntableNames\030\001 \003(\t\"\036\n\tTableD" +
      "ata\022\021\n\ttableData\030\001 \003(\014\"8\n\nFetchTable\022\r\n\005",
      "token\030\001 \002(\t\022\r\n\005appId\030\002 \002(\t\022\014\n\004kind\030\003 \002(\t" +
      "2x\n\nLogService\022+\n\003log\022\024.services.LogMess" +
      "age\032\016.services.Void\022=\n\014listMessages\022\026.se" +
      "rvices.ListMessages\032\025.services.MessageLi" +
      "st2~\n\tDbService\0226\n\tgetTables\022\024.services." +
      "FetchTable\032\023.services.TableList\0229\n\014getTa" +
      "bleData\022\024.services.FetchTable\032\023.services" +
      ".TableData2\304\001\n\rDeployService\022;\n\010register" +
      "\022\034.services.RegisterDeployment\032\021.service" +
      "s.Boolean\022@\n\016announceDeploy\022\034.services.A",
      "nnounceDeployment\032\020.services.String\0224\n\013a" +
      "ppDeployed\022\025.services.AppDeployed\032\016.serv" +
      "ices.Void2\344\001\n\013UserService\0220\n\016getCurrentU" +
      "ser\022\016.services.User\032\016.services.User\0229\n\013g" +
      "etLoginUrl\022\024.services.UrlRequest\032\024.servi" +
      "ces.UrlRequest\0220\n\016unregisterUser\022\016.servi" +
      "ces.User\032\016.services.Void\0226\n\014registerUser" +
      "\022\026.services.RegisterUser\032\016.services.Void" +
      "B,\n org.prot.controller.services.genB\010Se" +
      "rvices"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_services_User_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_services_User_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_User_descriptor,
              new java.lang.String[] { "Uid", "Username", },
              org.prot.controller.services.gen.Services.User.class,
              org.prot.controller.services.gen.Services.User.Builder.class);
          internal_static_services_RegisterUser_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_services_RegisterUser_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_RegisterUser_descriptor,
              new java.lang.String[] { "Token", "Uid", "Username", "Session", },
              org.prot.controller.services.gen.Services.RegisterUser.class,
              org.prot.controller.services.gen.Services.RegisterUser.Builder.class);
          internal_static_services_UrlRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_services_UrlRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_UrlRequest_descriptor,
              new java.lang.String[] { "OkUrl", "FailedUrl", "RedirectUrl", },
              org.prot.controller.services.gen.Services.UrlRequest.class,
              org.prot.controller.services.gen.Services.UrlRequest.Builder.class);
          internal_static_services_Void_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_services_Void_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_Void_descriptor,
              new java.lang.String[] { },
              org.prot.controller.services.gen.Services.Void.class,
              org.prot.controller.services.gen.Services.Void.Builder.class);
          internal_static_services_Boolean_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_services_Boolean_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_Boolean_descriptor,
              new java.lang.String[] { },
              org.prot.controller.services.gen.Services.Boolean.class,
              org.prot.controller.services.gen.Services.Boolean.Builder.class);
          internal_static_services_String_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_services_String_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_String_descriptor,
              new java.lang.String[] { "Value", },
              org.prot.controller.services.gen.Services.String.class,
              org.prot.controller.services.gen.Services.String.Builder.class);
          internal_static_services_RegisterDeployment_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_services_RegisterDeployment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_RegisterDeployment_descriptor,
              new java.lang.String[] { "Token", "AppId", "Version", "Status", },
              org.prot.controller.services.gen.Services.RegisterDeployment.class,
              org.prot.controller.services.gen.Services.RegisterDeployment.Builder.class);
          internal_static_services_AnnounceDeployment_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_services_AnnounceDeployment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_AnnounceDeployment_descriptor,
              new java.lang.String[] { "Token", "AppId", "Version", "UploadToken", },
              org.prot.controller.services.gen.Services.AnnounceDeployment.class,
              org.prot.controller.services.gen.Services.AnnounceDeployment.Builder.class);
          internal_static_services_AppDeployed_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_services_AppDeployed_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_AppDeployed_descriptor,
              new java.lang.String[] { "Token", "AppId", "Version", },
              org.prot.controller.services.gen.Services.AppDeployed.class,
              org.prot.controller.services.gen.Services.AppDeployed.Builder.class);
          internal_static_services_LogMessage_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_services_LogMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_LogMessage_descriptor,
              new java.lang.String[] { "Token", "Appid", "Message", "Severity", },
              org.prot.controller.services.gen.Services.LogMessage.class,
              org.prot.controller.services.gen.Services.LogMessage.Builder.class);
          internal_static_services_ListMessages_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_services_ListMessages_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_ListMessages_descriptor,
              new java.lang.String[] { "Token", "AppId", "Severity", },
              org.prot.controller.services.gen.Services.ListMessages.class,
              org.prot.controller.services.gen.Services.ListMessages.Builder.class);
          internal_static_services_MessageList_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_services_MessageList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_MessageList_descriptor,
              new java.lang.String[] { "Messages", },
              org.prot.controller.services.gen.Services.MessageList.class,
              org.prot.controller.services.gen.Services.MessageList.Builder.class);
          internal_static_services_TableList_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_services_TableList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_TableList_descriptor,
              new java.lang.String[] { "TableNames", },
              org.prot.controller.services.gen.Services.TableList.class,
              org.prot.controller.services.gen.Services.TableList.Builder.class);
          internal_static_services_TableData_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_services_TableData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_TableData_descriptor,
              new java.lang.String[] { "TableData", },
              org.prot.controller.services.gen.Services.TableData.class,
              org.prot.controller.services.gen.Services.TableData.Builder.class);
          internal_static_services_FetchTable_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_services_FetchTable_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_services_FetchTable_descriptor,
              new java.lang.String[] { "Token", "AppId", "Kind", },
              org.prot.controller.services.gen.Services.FetchTable.class,
              org.prot.controller.services.gen.Services.FetchTable.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
